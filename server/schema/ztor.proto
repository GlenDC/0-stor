syntax = "proto3";

// Types
message Empty {
}

message Namespace {
    string label = 1;
    int64 spaceAvailable = 2;
    int64 spaceUsed = 3;
    int64 readRequestPerHour = 4;
    int64 writeRequestPerHour = 5;
    int64 nrObjects = 6;
}

message Object {
    bytes key = 1;
    bytes value = 2;
    repeated string referenceList = 3;
}

// Namespace management
message GetNamespaceRequest {
    string label = 1;
}
message GetNamespaceReply {
    Namespace namespace = 1;
}

service NamespaceManager {
    rpc Get (GetNamespaceRequest) returns (GetNamespaceReply) {}
}

// Object management
message ListObjectsRequest {
    string label = 1;
}

message CreateObjectRequest {
    string Label = 1;
    Object object = 2;
}
message CreateObjectReply {}

message ExistsObjectRequest {
    string Label = 1;
    bytes key = 2;
}
message ExistsObjectReply {
    bool exists = 1;
}

message GetObjectRequest {
    string Label = 1;
    bytes key = 2;
}
message GetObjectReply {
    Object object = 2;
}

message DeleteObjectRequest {
    string Label = 1;
    bytes key = 2;
}
message DeleteObjectReply {}

message UpdateReferenceListRequest{
    string label = 1;
    bytes key = 2;
    repeated string referenceList = 3;
}

message UpdateReferenceListReply {}

message CheckRequest {
    string label = 1;
    repeated string ids = 2;
}

message CheckResponse {
    string id = 1;
    Status status = 2;

    enum Status {
        ok = 0;
        corrupted = 1;
        missing = 2;
  }
}

service ObjectManager {
    rpc Create (CreateObjectRequest) returns (CreateObjectReply) {}
    rpc List (ListObjectsRequest) returns (stream Object) {}
    rpc Get (GetObjectRequest) returns (GetObjectReply) {}
    rpc Exists (ExistsObjectRequest) returns (ExistsObjectReply) {}
    rpc Delete (DeleteObjectRequest) returns (DeleteObjectReply) {}
    rpc SetReferenceList(UpdateReferenceListRequest) returns (UpdateReferenceListReply) {}
    rpc AppendReferenceList(UpdateReferenceListRequest) returns (UpdateReferenceListReply) {}
    rpc RemoveReferenceList(UpdateReferenceListRequest) returns (UpdateReferenceListReply) {}
    rpc Check(CheckRequest) returns (stream CheckResponse) {}
}
